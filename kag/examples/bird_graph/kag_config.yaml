#------------project configuration start----------------#
openie_llm: &openie_llm
  type: maas
  base_url: https://dashscope.aliyuncs.com/compatible-mode/v1/
  api_key:
  model: qwen2.5-7b-instruct-1m
  enable_check: false

chat_llm: &chat_llm
  type: maas
  base_url: https://dashscope.aliyuncs.com/compatible-mode/v1/
  api_key:
  model: qwen-plus-latest
  enable_check: false

vectorize_model: &vectorize_model
  api_key:
  base_url: https://api.siliconflow.cn/v1/
  model: BAAI/bge-m3
  type: openai
  vector_dimensions: 1024
  enable_check: false
vectorizer: *vectorize_model


log:
  level: INFO
project:
  biz_scene: default
  host_addr: http://127.0.0.1:8887
  id: '1'
  language: en
  namespace: BirdGraph

#------------project configuration end----------------#

#------------kag-builder configuration start----------------#
kag_builder_pipeline:
  chain:
    type: unstructured_builder_chain # kag.builder.default_chain.DefaultUnstructuredBuilderChain
    extractor:
      type: schema_constraint_extractor # kag.builder.component.extractor.schema_constraint_extractor.SchemaConstraintExtractor
      llm: *openie_llm
      ner_prompt:
        type: spg_entity # kag.builder.prompt.spg_prompt.SPGEntityPrompt
      event_prompt:
        type: spg_event # kag.builder.prompt.spg_prompt.SPGEventPrompt
      std_prompt:
        type: default_std # kag.builder.prompt.default.std.OpenIEEntitystandardizationdPrompt
      relation_prompt:
        type: spg_relation # kag.builder.prompt.spg_prompt.SPGRelationPrompt
    reader:
      type: txt_reader # kag.builder.component.reader.txt_reader.TXTReader
    post_processor:
      type: kag_post_processor # kag.builder.component.postprocessor.kag_postprocessor.KAGPostProcessor
    splitter:
      type: length_splitter # kag.builder.component.splitter.length_splitter.LengthSplitter
      split_length: 300
      window_length: 0
    vectorizer:
      type: batch_vectorizer # kag.builder.component.vectorizer.batch_vectorizer.BatchVectorizer
      vectorize_model: *vectorize_model
    writer:
      type: kg_writer # kag.builder.component.writer.kg_writer.KGWriter
  num_threads_per_chain: 2
  num_chains: 20
  scanner:
    type: dir_file_scanner # kag.builder.component.scanner.directory_scanner.DirectoryScanner
#------------kag-builder configuration end----------------#

#------------kag-solver configuration start----------------#


kg_cs:
  type: kg_cs_open_spg
  path_select:
    type: exact_one_hop_select
  entity_linking:
    type: entity_linking
    recognition_threshold: 0.9
    exclude_types:
      - Chunk

kg_fr:
  type: kg_fr_open_spg
  top_k: 20
  path_select:
    type: fuzzy_one_hop_select
    llm_client: *chat_llm
  ppr_chunk_retriever_tool:
    type: ppr_chunk_retriever
    llm_client: *openie_llm
  entity_linking:
    type: entity_linking
    recognition_threshold: 0.8
    exclude_types:
      - Chunk

rc:
  type: rc_open_spg
  vector_chunk_retriever:
    type: vector_chunk_retriever
    vectorize_model: *vectorize_model
  vectorize_model: *vectorize_model
  top_k: 20

kag_merger:
  type: kg_merger
  top_k: 20
  llm_module: *chat_llm
  summary_prompt:
    type: default_thought_then_answer
  vectorize_model: *vectorize_model

bird_cypher_runner: &bird_cypher_runner_conf
  type: bird_cypher_runner
  llm: *chat_llm

bird_cypher_gen: &bird_cypher_gen_conf
  type: bird_cypher_gen
  llm: *chat_llm

py_code_based_math_executor: &py_code_based_math_executor_conf
  type: py_code_based_math_executor
  llm: *openie_llm

solver_pipeline:
  type: bird_pipeline
  planner:
    type: kag_bird_planner
    llm: *chat_llm
    plan_prompt:
      type: default_bird_plan_prompt
    rewrite_prompt:
      type: default_query_rewrite
  executors:
    - *bird_cypher_gen_conf
  generator:
    type: bird_generator
    llm_client: *chat_llm
    generated_prompt:
      type: default_bird_resp_generator
    enable_ref: true
#------------kag-solver configuration end----------------#
